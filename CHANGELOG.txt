SimpleComplex/Database 1.x, 2019-01-06
--------------------------------------
- Release 1.3.2.

SimpleComplex/Database 1.x, 2019-01-04
--------------------------------------
- Don't use deprecated methods of the Time class, if new alternatives exist.
- phpunit's assert... methods are static, not instance methods.

SimpleComplex/Database 1.x, 2018-12-08
--------------------------------------
- MsSql result shan't err on empty result set (sic).
- Release 1.3.1.

SimpleComplex/Database 1.x, 2018-11-28
--------------------------------------
- Release 1.3.

SimpleComplex/Database 1.x, 2018-11-18
--------------------------------------
- MariaDb/MySQL SSL (TLS) connection support.
- Flags may now be passed as integer (bitmask), or list of integers and/or
  MYSQLI_CLIENT_* PHP constant name.
- Don't err on integer (dev/test) password.

SimpleComplex/Database 1.x, 2018-10-15
--------------------------------------
- MsSqlResult::fetchColumn() shan't assume that a null value is null
  due to error, when no native error reported.
- Release 1.2.1.

SimpleComplex/Database 1.x, 2018-09-29
--------------------------------------
- MsSql Query native argument type helpers.
- Release 1.2.

SimpleComplex/Database 1.x, 2018-09-23
--------------------------------------
- MsSql query option result_datetime_to_time converts \DateTime to Utils Time
  to ease JSON serialization et al.
- Release 1.1.1.

SimpleComplex/Database 1.x, 2018-09-19
--------------------------------------
- Release 1.1.

SimpleComplex/Database 1.x, 2018-09-08
--------------------------------------
- Query option sql_minify remove multi-line comment containing star.

SimpleComplex/Database 1.x, 2018-08-24
--------------------------------------
- Supported error code offset by a fixed number to get out of DBMS reserved
  error code range.

SimpleComplex/Database 1.x, 2018-08-22
--------------------------------------
- Use DBMS error code as exception code.

SimpleComplex/Database 1.x, 2018-08-18
--------------------------------------
- Query option sql_minify remove multi-line comment, and trim leading/trailing
  space chars.

SimpleComplex/Database 1.x, 2018-08-12
--------------------------------------
- Result methods for depleting/traversing all sets and rows.
- MsSql more query error codes mapped.
- Tests use TestHelper's method for circumventing phpunit's propensity
  to consume all exceptions.
- Secure that overriding Validate (if such) gets used.
- Release 1.0.

SimpleComplex/Database 1.x, 2018-08-11
--------------------------------------
- Query parameter validation on query failure always reported parameter error,
  even when none.
- DbQuery methods validateArguments()/validateArgumentsStringable() protected
  because not generic across DBMSs.
- Workaround for MsSql fetch-object producing segmentation fault when passed
  custom (non-stdClass) class name argument.
- Result tests.

SimpleComplex/Database 1.x, 2018-08-09
--------------------------------------
- MsSql query bugfixes: use simple arguments when simple query,
  and allow type qualified array to have only a single bucket,
  and check for non-empty type buckets.
- Result fetchColumn renamed; from fetchField.
- Result fetchAllArrays(), fetchAllObjects() instead of fetchAll(), to secure
  IDE recognition of list types (array[], object[]) and far simpler method
  parameter signature.
- Result fetchObject(), fetchAllObjects() check that class actually exists.
- Resolve native error code using error code ranges as well as particular codes.

SimpleComplex/Database 1.x, 2018-08-08
--------------------------------------
- Non-MsSql simple query always checks argument types, and object __toString().
- Query execution counter use natural value (first execution is 1), and counter
  renamed to nExecution; from execution.
- Safeguard against unintended reuse of non-prepared statement.
- MariaDb ability to call stored procedure via prepared statement confirmed,
  including ability to handle stored procedure producing more result sets.
- Allow executing simple query more times, if option reusable and intermediate
  call to parameters().
- DbResult insertId() simplified, cleaned-up and tested.

SimpleComplex/Database 1.x, 2018-08-07
--------------------------------------
- Moved FETCH_* constants to DbResult, from class Database.
- Moved error-as-string constants to DbError, from class Database.
- Removed obsolete class Database.
- Query validate_params bitmask: prepare, execute, failure etc.
- Query validate non-stringable object for MariaDb; mysqli_stmt::prepare exits
  (no error) when stumbling upon such.

SimpleComplex/Database 1.x, 2018-08-06
--------------------------------------
- MsSql query validate native out-parameters.
- MsSql query parameter validation check for int out of bigint range.
- Query option validate_params renamed; from validate_arguments.
- Query validate parameters on query execution failure; validate_params:1.

SimpleComplex/Database 1.x, 2018-08-05
--------------------------------------
- Query argument object stringification: MySQLi attempts to stringify even when
  no __toString() method, whereas Sqlsrv only stringifies \DateTime.
- Query option 'name'.
- Query use own messagePrefix() method.
- MsSql query do validate type qualified arguments, not original un-typed.

SimpleComplex/Database 1.x, 2018-08-04
--------------------------------------
- MsSql query support arguments actual type checking, even for later
  prepared statement executions.
- MariaDb query support arguments actual type checking, even for later
  prepared statement executions.
- MsSql query shan't err on first typed argument failing type validation,
  but continue until all args are validated.

SimpleComplex/Database 1.x, 2018-08-03
--------------------------------------
- Unit test query arguments: simple referred, update bucket in indexed list,
  update bucket in assoc. keyed list.
- Query method argumentsInvalid() renamed; from parameterTypesCheck().
- Query option validate_arguments.
- MsSql doesn't need support for more type chars (t ~ datetime, n ~ nvarchar),
  because Sqlsrv handles DateTime transparently (stringifying when for varchar)
  and nvarchar may be handled with type qualifying argument array (only needed
  when the parameter is to be used in a sql where clause, anyway).
- Query auto-stringable classes.
- MsSql Query support mixture of type qualified and un-qualified arguments.

SimpleComplex/Database 1.x, 2018-07-29
--------------------------------------
- MariaDbClient secure databaseInfo flags now that parent DbClient passes all
  non-standard databaseInfo buckets to options.
- DbQuery option sql_minify, and method to match it.
- MsSql affected_rows goes to first result set initially,
  but doesn't move to next.

SimpleComplex/Database 1.x, 2018-07-27
--------------------------------------
- MsSql client: remove redundant phrase from native error messages;
  [Microsoft][ODBC ...].

SimpleComplex/Database 1.x, 2018-07-22
--------------------------------------
- Methods messagePrefix() renamed; from errorMessagePrefix().
- DbClient constant DATABASE_INFO_REQUIRED replaced by DATABASE_INFO.
- DbClient support options passed in root of arg databaseInfo; as well as
  options passed in options bucket.
- MsSql client default to use ISO quoted identifier, and support shorthand
  option.

SimpleComplex/Database 1.x, 2018-06-30
--------------------------------------
- Minor test fixes; requires Utils >=1.7.2.

SimpleComplex/Database 1.x, 2018-05-21
--------------------------------------
- Tests use helpers of the Utils package.
- Release 0.9.3.

SimpleComplex/Database 1.x, 2018-05-12
--------------------------------------
- result mode renamed; from cursor mode.
- Query generic options allowed vs. specific options supported;
  and detect query option name misspelling.
- MariaDb auto-detect multi-query.
- Calling MariaDB/MySQL stored procedure _is_ possible with prepared statement
  as well as single simple query.
- Result numRows() methods deprecated because only supported for simple use/edge
  cases; by MariaDB/MySQL as well as SQL Server.
- Release 0.9.2.

SimpleComplex/Database 1.x, 2018-05-12
--------------------------------------
- MySQLi multi-query _is_ executed immediately; not until getting result set.
- Bugfix parameter substitution; wrong checks for parameter count,
  and tampered sql var forgotten.
- MariaDb result false/null checks when using result loader.
- Result nextSet() and nextRow() return boolean; only, not null for none.
- Result methods must be documented as throwing non-specific db runtime
  exception, to allow for exception type mapping; errorsToException().
- Abstract classes renamed; from 'Database...' to 'Db...'.
- MariaDB/MySQL multi-query is more of a deficiency than a feature, and separate
  multi-query interfaces/abstract classes is obsolete.
- All query and result methods must use exception type mapping.
- MsSql tests (like MariaDb) implemented and passed.

SimpleComplex/Database 1.x, 2018-05-11
--------------------------------------
- MariaDb prepared statement must not use cursor mode 'store', because then
  result binding is the only way to go - and result binding sucks IMHO.
- Turn off re-connection permanently when a query uses unbuffered cursor mode.
- Client getConnection() must not throw exception.

SimpleComplex/Database 1.x, 2018-05-10
--------------------------------------
- MariaDb client: there's no means of getting native error until successful
  connection.
- NB: MySQLi multi-query isn't executed until getting result set.
- Classify native error codes, to discern connection|query|result error
  in places where ambiguous.
- Query statementClosed must remain null if no statement (successfully) opened.
- MariaDb result fix setIndex/rowIndex.
- Result logger prepend 'result[setIndex][rowIndex]' to 'method'.

SimpleComplex/Database 1.x, 2018-05-06
--------------------------------------
- Result set index initial value -1.
  Native row fetching methods implicitly go to first result set; unless moved.
- Result nextSet/nextRow() shall optionally not throw exception on error.
- Query constructor must trim arg sql before checking for emptyness.
- Error message prefix is now Database[client name][rmdbs type][database name].
- Do NOT close statement/free result before getting native error.
- MariaDb query must have own nativeError() because \mysqli_stmt has own
  separate error list.
- Result fetchField method, which gets value; not column metadata.
- Aborted columnMetadata() method, because for Sqlsrv it's a query thing
  (sqlsrv_field_metadata(), no execution) whereas for MySQLi it's a result thing
  (mysqli_fetch_field()); and too much work anyway.

SimpleComplex/Database 1.x, 2018-05-03
--------------------------------------
- No custom LogicExceptions; logical exceptions should be detected during
  dev/test, and it's better that all (unexpected) database exceptions
  are/inherit from a single class (DbRuntimeException).
- (prepared statement) Prevent de-referencing when using an arguments list
  whose value buckets aren't set as &$value.
- MsSqlQuery case-insentive search for insert ID magic extra query.
- Readme MS SQL example must have certain options for providing affected rows
  and insert ID.
- Readme describe engines.

SimpleComplex/Database 1.x, 2018-05-02
--------------------------------------
- Parameter value escaper shan't escape semicolon, not even when multi-query.
- Result nextRow() is a result interface method.
- MariaDb nextRow() shan't always fail.
- All multi-query features moved to separate (extending) interfaces and classes;
  MS SQL implementation no longer relates to multi-querying at all.
- Forbid reconnecting if unfinished transaction.

SimpleComplex/Database 1.x, 2018-05-01
--------------------------------------
- prepare() support associative arguments array.
- MS SQL insertId() shan't err when ID ;-)
- Better query logging.
- Sql string variables renamed to 'sql'; from 'query'.

SimpleComplex/Database 1.x, 2018-04-30
--------------------------------------
- MS SQL insertId(), and better error handling.
- Freeing result is result method, not a query method.
- Result constructor must accommodate (MySQLi) connection object as well
  as statement.
- An abstract class doesn't have to implement methods of an interface.
- insertId() must return null when query didn't trigger setting an ID.
- MariaDb result; entirely untested, and still wondering about the nature
  of non-selecting multi-queries vs. mysql_multi_query.

SimpleComplex/Database 1.x, 2018-04-24
--------------------------------------
- Clarify which methods are 'package protected'; @internal.
- Order sequence of methods in code by relevance to user.
- More exceptions must be preceded by unsetting prepared statement arguments
  reference.
- Log query in more situations. Use a random query ID to correlate log warnings
  with exceptions.

SimpleComplex/Database 1.x, 2018-04-23
--------------------------------------
- Prepared statement arguments reference unsetting problem solved by setting
  the reference on an array bucket of an instance var; instead of on the
  instance var itself.
- Err on attempt to execute() closed statement.

SimpleComplex/Database 1.x, 2018-04-22
--------------------------------------
- MS SQL client info.
- The parameter marker is now a constant; not necessarily question mark.
- Splitting query by parameter marker - and checking for parameters/arguments
  count mismatch - moved to decidated method.
- MS SQL query use automated parameter substitution even when non-prepared
  statement.
- Handle that query instance var prepared-statement-arguments is a reference,
  and that unsetting it renders the query object useless.

SimpleComplex/Database 1.x, 2018-04-21
--------------------------------------
- Check parameter types.
- Query multi-query features sorted.
- Client options resolved into separate optionsResolved property.
  And connection flags is a MariaDb/MySQL-only feature.
- Client public optionsResolve() to facilitate debugging.
- MS SQL query and result complete.

SimpleComplex/Database 1.x, 2018-04-20
--------------------------------------
- Client getConnection() shan't default to re-connect.
- Refer prepared statements arguments.
- Close prepared statement on query object destruction.
- Uniform error messages, stating database type and client name.
- Query execute.
- Forbid starting transaction when previously ditto isn't terminated yet.
- Document that MariaDB prepared statement requires the mysqlnd driver.
  Because a result set will eventually be handled as \mysqli_result
  via mysqli_stmt::get_result(); only available with mysqlnd.


SimpleComplex/Database 1.x, 2018-04-19
--------------------------------------
- Initial.
